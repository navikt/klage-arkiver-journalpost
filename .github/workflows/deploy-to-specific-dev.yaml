name: Manual deploy to specific dev environment
run-name: Manual deploy of ${{ github.ref_name }} to ${{inputs.environment}}

on:
  workflow_call:
    inputs:
      image:
        required: true
        type: string
      nav-cluster:
        required: true
        type: string
      nav-environment:
        required: true
        type: string

#  push:

jobs:
  deploy:
    name: Deploy to ${{ inputs.nav-environment }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      # sanity check
      - name: Check if nais/${{ inputs.nav-environment }}-config.json exists
        id: check-json
        run: echo "file-exists=$(test -f deploy/${{ inputs.nav-environment }}-config.json && echo 'config_exists' || echo 'config_not_exists')" >> $GITHUB_OUTPUT
      - uses: nais/deploy/actions/deploy@v2
        if: ${{ steps.check-json.outputs.file-exists == 'config_exists' }}
        env:
          CLUSTER: ${{ inputs.nav-cluster }}
          RESOURCE: deploy/nais.yaml
          VARS: deploy/${{ inputs.nav-environment }}-config.json
          VAR: image=${{ inputs.image }}
      - name: No config files detected - unable to deploy
        if: ${{ steps.check-json.outputs.file-exists != 'config_exists' }}
        run: echo "::warning title=Unable to deploy::Could not find deploy/${{ inputs.nav-environment }}-config.json"
      - name: Post failures to Slack
        if: failure()
        run: |
          curl -X POST --data-urlencode "payload={\"channel\": \"$CHANNEL\", \"text\": \"$MESSAGE\", \"icon_emoji\": \":ghost:\"}" $WEBHOOK_URL
        env:
          MESSAGE: "Deploy til dev feilet"
          CHANNEL: "#klage-notifications"
          WEBHOOK_URL: ${{ secrets.WEBHOOK_URL }}


  build:
    name: Build
    permissions:
      contents: read
      id-token: write
    outputs:
      image: ${{ steps.docker-build-push.outputs.image }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle.kts') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Install Java 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: temurin

      - name: Test and build
        run: ./gradlew test bootJar
        env:
          ORG_GRADLE_PROJECT_githubUser: x-access-token
          ORG_GRADLE_PROJECT_githubPassword: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push Docker image
        uses: nais/docker-build-push@v0
        id: docker-build-push
        with:
          team: klage # required
          tag: ${{ github.sha }} # optional
          push_image: true # optional, default true
          dockerfile: Dockerfile # optional, default Dockerfile
          docker_context: . # optional, default .
          image_suffix: # optional, default empty
          cache_from: type=gha # optional, default type=gha
          cache_to: type=gha,mode=max # optional, default type=gha,mode=max
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }} # required, but is defined as an organization secret
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }} # required, but is defined as an organization variable
          build_args: |
            VERSION=${CI}

      - name: Post failures to Slack
        if: failure()
        run: |
          curl -X POST --data-urlencode "payload={\"channel\": \"$CHANNEL\", \"text\": \"$MESSAGE\", \"icon_emoji\": \":ghost:\"}" $WEBHOOK_URL
        env:
          MESSAGE: "Bygg feilet"
          CHANNEL: "#klage-notifications"
          WEBHOOK_URL: ${{ secrets.WEBHOOK_URL }}
#
#  detect-dev-environments:
#    name: Detect dev environments to deploy to
#    runs-on: ubuntu-latest
#    outputs:
#      environments: ${{ steps.create-strategy-matrix.outputs.environments }}
#    steps:
#      - uses: actions/checkout@v4
#      - id: create-strategy-matrix
#        run: echo "environments=$(array=($(ls deploy/q*config.json | sed -nr 's/deploy\/(.*)\-config.json/\1/p')); printf '%s\n' "${array[@]}" | jq -R . | jq -s -c .)" >> $GITHUB_OUTPUT
#      - id: print-dev-environments
#        run: echo "List of dev environments to deploy to is ${{ steps.create-strategy-matrix.outputs.environments }}"
#
#  deploy_to_dev:
#    name: Deploy to q1 #${{ inputs.environment }}
#    needs: build
#    permissions:
#      contents: read
#      id-token: write
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v4
#        name: Checkout code
#          # sanity check
#      - name: Check if nais/q1-config.json exists
#        id: check-json
#        run: echo "file-exists=$(test -f deploy/q1-config.json && echo 'config_exists' || echo 'config_not_exists')" >> $GITHUB_OUTPUT
#      - name: Deploy to dev
#        uses: nais/deploy/actions/deploy@v2
#        if: ${{ steps.check-json.outputs.file-exists == 'config_exists' }}
#        env:
#          TEAM: klage
#          CLUSTER: dev-gcp
#          VARS: deploy/q1-config.json
#          RESOURCE: deploy/nais.yaml
#          # Trengs?
##          APIKEY: ${{ secrets.NAIS_DEPLOY_API_KEY }}
#          VAR: image=${{ needs.build.outputs.image }}
##          IMAGE: ${{ needs.build.outputs.image }}
#      - name: No config files detected - unable to deploy
#        if: ${{ steps.check-json.outputs.file-exists != 'config_exists' }}
#        run: echo "::warning title=Unable to deploy::Could not find nais/q1-config.json"
#      - name: Post failures to Slack
#        if: failure()
#        run: |
#          curl -X POST --data-urlencode "payload={\"channel\": \"$CHANNEL\", \"text\": \"$MESSAGE\", \"icon_emoji\": \":ghost:\"}" $WEBHOOK_URL
#        env:
#          MESSAGE: "Deploy til dev feilet"
#          CHANNEL: "#klage-notifications"
#          WEBHOOK_URL: ${{ secrets.WEBHOOK_URL }}